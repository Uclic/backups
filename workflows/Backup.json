{
  "createdAt": "2022-11-21T14:13:37.666Z",
  "updatedAt": "2022-11-21T14:19:25.479Z",
  "id": 8,
  "name": "Backup",
  "active": true,
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "position": [
        -1060,
        260
      ],
      "typeVersion": 1,
      "id": "e641a9d9-cf0e-4700-908a-7dfe7f6cb12b"
    },
    {
      "parameters": {},
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        600,
        380
      ],
      "typeVersion": 1,
      "id": "8ee441d0-958b-4eab-982c-c96d02d594de"
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        900,
        380
      ],
      "typeVersion": 1,
      "id": "1b1c8e9c-b526-4d6e-89b0-c7396c45ee51"
    },
    {
      "parameters": {},
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1100,
        200
      ],
      "typeVersion": 1,
      "id": "eb57d827-2f34-46aa-8e1c-0d91c3c9546b"
    },
    {
      "parameters": {},
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1100,
        380
      ],
      "typeVersion": 1,
      "id": "72a6396c-d6a5-4474-adf7-dde7c93ffd68"
    },
    {
      "parameters": {},
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1100,
        540
      ],
      "typeVersion": 1,
      "id": "158dc58f-5e0d-470c-bb8c-152b2ccbfbed"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json ({{$json[\"github_status\"]}})"
      },
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        1300,
        380
      ],
      "typeVersion": 1,
      "id": "530c3c4a-fcd0-4a3d-97e9-bbc8748b9d55",
      "credentials": {
        "githubOAuth2Api": {
          "id": "6",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json ({{$json[\"github_status\"]}})"
      },
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        1300,
        540
      ],
      "typeVersion": 1,
      "id": "be94c2d4-c798-44c8-a25d-e6f471082ea2",
      "credentials": {
        "githubApi": {
          "id": "7",
          "name": "GitHub account 2"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// File Returned with Content\nif (Object.keys(items[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from(items[0].json.content, 'base64'));\n  var n8nWorkflow = items[1].json.data;\n  var orderedOriginal = JSON.stringify(origWorkflow, null, 2);\n  \n  // Determine Difference\n  if ( orderedOriginal === n8nWorkflow ) {\n    items[0].json.github_status = \"same\";\n    items[0].json.content_decoded = orderedOriginal;\n  } else {\n    items[0].json.github_status = \"different\";\n    items[0].json.content_decoded = orderedOriginal;\n    items[0].json.n8n_data_stringy = n8nWorkflow;\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = (items[1].json.data);\n  \n  // Proper Formatting\n  items[0].json.github_status = \"new\";\n  items[0].json.n8n_data_stringy = n8nWorkflow;\n}\n\n// Return Items\nreturn items;"
      },
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.function",
      "position": [
        760,
        380
      ],
      "typeVersion": 1,
      "id": "a6d3cebd-d59d-444a-9fe1-836584b3130f"
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX"
            }
          ]
        }
      },
      "name": "Every 2 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -1060,
        540
      ],
      "typeVersion": 1,
      "id": "009cf461-a0e7-4f2b-81d6-63680e14ffaa"
    },
    {
      "parameters": {
        "filePath": "={{$json[\"filename\"]}}"
      },
      "name": "Read Binary File",
      "type": "n8n-nodes-base.readBinaryFile",
      "position": [
        0,
        400
      ],
      "typeVersion": 1,
      "id": "7861d1d2-e6b8-4a55-9a31-73e886b77113"
    },
    {
      "parameters": {
        "setAllData": false,
        "options": {}
      },
      "name": "Move Binary Data",
      "type": "n8n-nodes-base.moveBinaryData",
      "position": [
        200,
        400
      ],
      "typeVersion": 1,
      "id": "8208f9b7-778f-48d3-8309-cff673f7e987"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "n8n"
            },
            {
              "name": "repo.name",
              "value": "backups"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            },
            {
              "name": "backupFolder",
              "value": "/home/node/tmp/backups/"
            }
          ]
        },
        "options": {}
      },
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -900,
        400
      ],
      "typeVersion": 1,
      "id": "b385fd91-b537-454e-bf17-64b919dee7d2"
    },
    {
      "parameters": {
        "command": "=n8n export:workflow --backup --output={{$json[\"backupFolder\"]}}"
      },
      "name": "Run CLI to export Workflows",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        -740,
        400
      ],
      "typeVersion": 1,
      "id": "8b9405bb-cbeb-477a-9d21-3e8fbddc5c68"
    },
    {
      "parameters": {
        "command": "=ls -1 {{$node[\"Globals\"].json[\"backupFolder\"]}}"
      },
      "name": "List filenames",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        -560,
        400
      ],
      "typeVersion": 1,
      "id": "911554ef-9b43-4103-b483-7cc1f9eca9dc"
    },
    {
      "parameters": {
        "functionCode": "const newItems = [];\nfor (file of items[0].json.stdout.split('\\n')) {\n  newItems.push({\n    json: {\n      filename: $node[\"Globals\"].json[\"backupFolder\"] + file\n    }\n  });\n}\nreturn newItems;"
      },
      "name": "Convert filenames to objects with path",
      "type": "n8n-nodes-base.function",
      "position": [
        -380,
        400
      ],
      "typeVersion": 1,
      "id": "8854555e-f029-4d9b-861a-c33c96f2c57b"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "name": "One at a time",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -200,
        400
      ],
      "typeVersion": 1,
      "id": "73ce9dbc-d1f5-473e-8e27-2563bb036c94"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{JSON.parse($json[\"data\"]).name}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        400,
        200
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "id": "ceb05f06-debe-49e7-bac0-ec85101352f9",
      "credentials": {
        "githubOAuth2Api": {
          "id": "6",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    }
  ],
  "connections": {
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Run CLI to export Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 2 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "One at a time": {
      "main": [
        [
          {
            "node": "Read Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List filenames": {
      "main": [
        [
          {
            "node": "Convert filenames to objects with path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move Binary Data": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Read Binary File": {
      "main": [
        [
          {
            "node": "Move Binary Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run CLI to export Workflows": {
      "main": [
        [
          {
            "node": "List filenames",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert filenames to objects with path": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "pinData": {},
  "tags": [],
  "hash": "7e8a47641194bffde1c651c07ff18aaf"
}